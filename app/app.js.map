{"version":3,"sources":["calculist2.module.js","database.service.js","calculator.controller.js","list.controller.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACdlNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"app.js","sourcesContent":["'use strict'\n/* global angular */\n\nangular.module('calculist2', [])\n","angular\n  .module('calculist2')\n  .service('dataService', dataObject)\n\nfunction dataObject () {\n  this.cards = [\n    {\n      'id': '999',\n      'title': 'Sample Card',\n      'equation': '34 + 10 =',\n      'solution': '44'\n    }\n  ]\n}\n","angular\n  .module('calculist2')\n  .controller('calculatorController', calculator)\n\nfunction calculator ($scope, dataService) {\n  // Route the dataService to a local object\n  $scope.dataService = dataService\n  // create containers for top and bottom line elements\n  $scope.displayBot = ''\n  $scope.displayTop = ''\n  // create container for current equation\n  $scope.calc = []\n  // create state vaiable for equation solution\n  $scope.equationSolved = false\n\n  // Add clicked button to the display\n  $scope.inputNumberClick = function (btn) {\n    if ($scope.equationSolved) { return }\n    $scope.displayBot += (btn)\n  }\n\n  // Add value and clicked function to the display\n  $scope.inputFunctionClick = function (fn) {\n    $scope.displayBot = $scope.displayBot.toString()\n    // Toggle '-' number\n    if (fn === '+/-') {\n      $scope.displayBot = toggleLeadingChar($scope.displayBot.toString(), '-')\n      $scope.equationSolved = false\n      return\n    // Toggle '√' number\n    }\n    if (fn === '√') {\n      $scope.displayBot = toggleLeadingChar($scope.displayBot.toString(), '√')\n      $scope.equationSolved = false\n      return\n    }\n    // Check if blank or isNaN\n    if ($scope.displayBot === '') {\n      return\n    }\n    $scope.calc.push($scope.displayBot)\n    $scope.calc.push(fn)\n    displayEquation($scope.calc)\n    $scope.clear('bottom')\n    $scope.equationSolved = false\n  }\n\n  // Add a clear function\n  $scope.clear = function (what) {\n    switch (what) {\n      case 'all':\n        $scope.calc = []\n        $scope.displayTop = ''\n        $scope.displayBot = ''\n        $scope.equationSolved = false\n        break\n      case 'top':\n        $scope.displayTop = ''\n        break\n      case 'bottom':\n        $scope.displayBot = ''\n        break\n      case 'array':\n        $scope.calc = []\n        break\n    }\n  }\n\n  // Handle the equals click to evaluate expression and return result\n  $scope.equate = function () {\n    // check to see if equation has been solved\n    if ($scope.equationSolved) { return }\n    if (isNaN($scope.displayBot) && !$scope.displayBot.startsWith('√') && !$scope.displayBot.startsWith('-√')) { return }\n    // Add last number entered and '=' to the calc array\n    $scope.calc.push($scope.displayBot, '=')\n    // Clear the display bottom\n    $scope.clear('bottom')\n    displayEquation($scope.calc)\n    // Clean the calc array equation\n    // Solve the array equation and display answer on display bottom\n    $scope.displayBot = solveArray(cleanArray($scope.calc))\n    $scope.clear('array')\n    $scope.equationSolved = true\n  }\n\n  // Create function to walk backwards through the numbers\n  $scope.backspace = function () {\n    if ($scope.equationSolved) {\n      $scope.clear('top')\n      $scope.equationSolved = false\n    } else if ($scope.displayBot === '' && $scope.displayTop === '') {\n      return\n    } else if ($scope.displayBot === '') {\n      $scope.calc.pop()\n      $scope.displayBot = $scope.calc.pop()\n      displayEquation($scope.calc)\n    } else {\n      $scope.displayBot = $scope.displayBot.toString()\n      $scope.displayBot = $scope.displayBot.slice(0, $scope.displayBot.length - 1)\n    }\n  }\n\n  // Toggle a charater on or off from a string\n  function toggleLeadingChar (str, char) {\n    str.includes(char) ? str = str.slice(1) : str = char + str\n    return str\n  }\n\n  // Convert calc array to a string and display it\n  function displayEquation (inputArray, addItem) {\n    if (addItem) {\n      inputArray.push(addItem)\n    }\n    $scope.displayTop = inputArray.join(' ')\n  }\n\n  // Clean array, Clip leading and trailing functions\n  function cleanArray (array) {\n    // Convert √numbers to floats\n    array = array.map(function (currVal, i, array) {\n      if (currVal.startsWith('-√')) {\n        return Math.sqrt(parseFloat(currVal.slice(2))) * -1\n      }\n      return currVal.startsWith('√') ? Math.sqrt(parseFloat(currVal.slice(1))) : currVal\n    })\n    while (array[0] === '' || isNaN(array[0])) { array.shift() }\n    while (array[array.length - 1] === '' || isNaN(array[array.length - 1])) { array.pop() }\n    return array\n  }\n\n  // solve the input string and return a value\n  function solveArray (equationArray) {\n    var fnIndex = '?'\n    var fnAnswer = '?'\n\n    // First check to see if solution has been found\n    if (equationArray.length === 1) { return equationArray[0] }\n\n    // Second check to see if an exponent exists\n    if (equationArray.includes('^')) {\n      fnIndex = equationArray.indexOf('^')\n      fnAnswer = Math.pow(parseFloat(equationArray[fnIndex - 1]), parseFloat(equationArray[fnIndex + 1]))\n      equationArray.splice(fnIndex - 1, 3, fnAnswer)\n      return solveArray(equationArray)\n    }\n    // Third check to see if a multiplacation exists\n    if (equationArray.includes('x')) {\n      fnIndex = equationArray.indexOf('x')\n      fnAnswer = parseFloat(equationArray[fnIndex - 1]) * parseFloat(equationArray[fnIndex + 1])\n      equationArray.splice(fnIndex - 1, 3, fnAnswer)\n      return solveArray(equationArray)\n    }\n    // Fourth check to see if a division exists\n    if (equationArray.includes('÷')) {\n      fnIndex = equationArray.indexOf('÷')\n      fnAnswer = parseFloat(equationArray[fnIndex - 1]) / parseFloat(equationArray[fnIndex + 1])\n      equationArray.splice(fnIndex - 1, 3, fnAnswer)\n      return solveArray(equationArray)\n    }\n    // Fifth check to see if a addition exists\n    if (equationArray.includes('+')) {\n      fnIndex = equationArray.indexOf('+')\n      fnAnswer = parseFloat(equationArray[fnIndex - 1]) + parseFloat(equationArray[fnIndex + 1])\n      equationArray.splice(fnIndex - 1, 3, fnAnswer)\n      return solveArray(equationArray)\n    }\n    // Sixth check to see if a subtraction exists\n    if (equationArray.includes('-')) {\n      fnIndex = equationArray.indexOf('-')\n      fnAnswer = parseFloat(equationArray[fnIndex - 1]) - parseFloat(equationArray[fnIndex + 1])\n      equationArray.splice(fnIndex - 1, 3, fnAnswer)\n      return solveArray(equationArray)\n    }\n  }\n\n  // $scope.keyPress = function (keycode) {\n  //   console.log(keycode)\n  //   var validKeyCodes = {\n  //     '48': 0, '49': 1, '50': 2, '51': 3, '52': 4, // 0-4\n  //     '53': 5, '54': 6, '55': 7, '56': 8, '57': 9, // 5-9\n  //     '42': ' x ', '43': ' + ', '45': ' - ', '47': ' ÷ ', // *,+,-,/\n  //     '13': 'Enter' // Enter\n  //   }\n  //   if (validKeyCodes[keycode]) {\n  //     if (validKeyCodes[keycode] === 'Enter') {\n  //       $scope.equate()\n  //     } else {\n  //       $scope.inputBtnClick(validKeyCodes[keycode])\n  //     }\n  //   } else {\n  //     console.log('Key not valid')\n  //   }\n  // }\n\n  // Create New Card\n  $scope.createCard = function () {\n    // Check if data is valid for card creation\n    if ($scope.displayTop && $scope.displayBot) {\n      var newCard = {}\n      newCard.title = 'Card Title'\n      newCard.id = Date.now() * Math.ceil(Math.random() * 10)\n      newCard.equation = $scope.displayTop\n      newCard.solution = $scope.displayBot\n      dataService.cards.unshift(newCard)\n    } else {\n      // Else throw error\n      console.log('Data not vailid for new card')\n    }\n  }\n}\n","angular\n  .module('calculist2')\n  .controller('listController', list)\n\nfunction list ($scope, dataService) {\n  $scope.dataService = dataService\n\n// Move card ('up' or 'down')\n  $scope.moveCard = function (direction) {\n    var cardID = this.card.id\n    var arrayLoc = findArrayLocation(cardID)\n    // if up swap current card with one above\n    // else if down swap current card with one below\n    var swapHolder = ''\n    if (direction === 'up') {\n      console.log('Up, Up, Up!')\n      swapHolder = dataService.cards[arrayLoc - 1]\n      dataService.cards[arrayLoc - 1] = dataService.cards[arrayLoc]\n      dataService.cards[arrayLoc] = swapHolder\n    } else if (direction === 'down') {\n      console.log('Down, Down, Down!')\n      swapHolder = dataService.cards[arrayLoc + 1]\n      dataService.cards[arrayLoc + 1] = dataService.cards[arrayLoc]\n      dataService.cards[arrayLoc] = swapHolder\n    } else {\n      console.log('No direction found')\n    }\n  }\n  // Delete Card\n  $scope.delCard = function () {\n    var cardID = this.card.id\n    var arrayLoc = findArrayLocation(cardID)\n    dataService.cards.splice(arrayLoc, 1)\n    console.log('See Ya!')\n  }\n\n  function findArrayLocation (id) {\n    for (var i = 0; i < dataService.cards.length; i++) {\n      if (dataService.cards[i].id === id) {\n        return i\n      }\n    }\n  }\n\n\n\n}\n"],"sourceRoot":"/source/"}